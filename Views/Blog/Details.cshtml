@model SimpleBlogMVC.Models.BlogPost
@using Microsoft.AspNetCore.Identity
@using SimpleBlogMVC.Extensions
@inject UserManager<ApplicationUser> UserManager
@{
    ViewData["Title"] = Model.Title;
    var currentUser = await UserManager.GetUserAsync(User);
}

<div class="container mt-4">
    <div class="row">
        <div class="col-md-8 offset-md-2">
            <h1 class="mb-3">@Model.Title</h1>
            <div class="text-muted mb-3">
                <span>By @Model.Username</span>
                <span class="mx-2">|</span>
                <span>@Model.CreatedAt.ToString("MMMM dd, yyyy")</span>
                <span class="mx-2">|</span>
                <span>@Model.Views view@(Model.Views != 1 ? "s" : "")</span>
            </div>
            @if (!string.IsNullOrEmpty(Model.Tags))
            {
                <div class="mb-3">
                    @foreach (var tag in Model.Tags.Split(',', StringSplitOptions.RemoveEmptyEntries))
                    {
                        <span class="badge bg-secondary me-1">@tag.Trim()</span>
                    }
                </div>
            }
            <div class="blog-content mb-4">
                @Html.Raw(Model.Content)
            </div>
            @if (User.Identity.Name == Model.Username)
            {
                <div class="mb-3">
                    <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-primary me-2">Edit</a>
                    <a asp-action="Delete" asp-route-id="@Model.Id" class="btn btn-danger">Delete</a>
                </div>
            }

            <!-- Comments Section -->
            <div class="comments-section mt-5">
                <h3>Comments (@(Model.Comments?.Count ?? 0))</h3>
                @if (User.Identity.IsAuthenticated)
                {
                    <form asp-controller="Comment" asp-action="Create" method="post" class="mb-4">
                        <input type="hidden" name="blogPostId" value="@Model.Id" />
                        <div class="form-group">
                            <textarea name="content" class="form-control" rows="3" placeholder="Add a comment..." required></textarea>
                        </div>
                        <button type="submit" class="btn btn-primary mt-2">Post Comment</button>
                    </form>
                }
                else
                {
                    <p>Please <a asp-controller="Account" asp-action="Login">log in</a> to comment.</p>
                }

                @if (Model.Comments != null && Model.Comments.Any())
                {
                    <div class="mb-3">
                        <button class="btn btn-outline-secondary" id="toggleMyComments">Show My Comments</button>
                    </div>

                    foreach (var comment in Model.Comments.Where(c => !c.IsDeleted && c.ParentCommentId == null).OrderByDescending(c => c.IsFavorite).ThenByDescending(c => c.UpvoteCount).ThenByDescending(c => c.CreatedAt))
                    {
                        var isAuthorComment = comment.User.UserName == Model.Username;
                        var isCurrentUserComment = currentUser?.Id == comment.UserId;

                        <div class="comment mb-3 @(comment.IsFavorite ? "border-primary" : "") @(isAuthorComment ? "author-comment" : "") @(isCurrentUserComment ? "my-comment" : "")" id="comment-@comment.Id">
                            <div class="comment-header d-flex justify-content-between align-items-center">
                                <h5>
                                    @comment.User.UserName
                                    @if (isAuthorComment)
                                    {
                                        <span class="badge bg-info ms-2">Author</span>
                                    }
                                </h5>
                                <small class="text-muted">@((DateTime.UtcNow - comment.CreatedAt).ToPrettyString())</small>
                            </div>
                            <p>@comment.Content</p>
                            @if (comment.UpdatedAt.HasValue)
                            {
                                <small class="text-muted">Edited @((DateTime.UtcNow - comment.UpdatedAt.Value).ToPrettyString()) ago</small>
                            }
                            <div class="comment-actions mt-2">
                                <form asp-controller="Comment" asp-action="ToggleUpvote" method="post" class="d-inline">
                                    <input type="hidden" name="id" value="@comment.Id" />
                                    <button type="submit" class="btn btn-sm btn-outline-primary">
                                        <i class="fas fa-thumbs-up"></i>
                                        <span class="upvote-count">@comment.UpvoteCount</span>
                                    </button>
                                </form>
                                @if (User.Identity.IsAuthenticated)
                                {
                                    <button class="btn btn-sm btn-outline-secondary reply-btn" data-comment-id="@comment.Id">Reply</button>
                                }
                                @if (isCurrentUserComment || User.Identity.Name == Model.Username)
                                {
                                    <button class="btn btn-sm btn-outline-warning edit-comment-btn" data-comment-id="@comment.Id">Edit</button>
                                    <form asp-controller="Comment" asp-action="Delete" method="post" class="d-inline">
                                        <input type="hidden" name="id" value="@comment.Id" />
                                        <button type="submit" class="btn btn-sm btn-outline-danger" onclick="return confirm('Are you sure you want to delete this comment?')">Delete</button>
                                    </form>
                                }
                                @if (User.Identity.Name == Model.Username)
                                {
                                    <form asp-controller="Comment" asp-action="FavoriteComment" method="post" class="d-inline">
                                        <input type="hidden" name="id" value="@comment.Id" />
                                        <button type="submit" class="btn btn-sm @(comment.IsFavorite ? "btn-primary" : "btn-outline-primary")">
                                            @(comment.IsFavorite ? "Unfavorite" : "Favorite")
                                        </button>
                                    </form>
                                }
                            </div>

                            <!-- Nested replies -->
                            @if (comment.Replies != null && comment.Replies.Any())
                            {
                                foreach (var reply in comment.Replies.Where(r => !r.IsDeleted).OrderBy(r => r.CreatedAt))
                                {
                                    var isAuthorReply = reply.User.UserName == Model.Username;
                                    var isCurrentUserReply = currentUser?.Id == reply.UserId;

                                    <div class="reply mt-3 ms-4 @(isAuthorReply ? "author-comment" : "") @(isCurrentUserReply ? "my-comment" : "")" id="comment-@reply.Id">
                                        <div class="reply-header d-flex justify-content-between align-items-center">
                                            <h6>
                                                @reply.User.UserName
                                                @if (isAuthorReply)
                                                {
                                                    <span class="badge bg-info ms-2">Author</span>
                                                }
                                            </h6>
                                            <small class="text-muted">@((DateTime.UtcNow - reply.CreatedAt).ToPrettyString())</small>
                                        </div>
                                        <p>@reply.Content</p>
                                        @if (reply.UpdatedAt.HasValue)
                                        {
                                            <small class="text-muted">Edited @((DateTime.UtcNow - reply.UpdatedAt.Value).ToPrettyString()) ago</small>
                                        }
                                        <div class="reply-actions mt-2">
                                            <form asp-controller="Comment" asp-action="ToggleUpvote" method="post" class="d-inline">
                                                <input type="hidden" name="id" value="@reply.Id" />
                                                <button type="submit" class="btn btn-sm btn-outline-primary">
                                                    <i class="fas fa-thumbs-up"></i>
                                                    <span class="upvote-count">@reply.UpvoteCount</span>
                                                </button>
                                            </form>
                                            @if (isCurrentUserReply || User.Identity.Name == Model.Username)
                                            {
                                                <button class="btn btn-sm btn-outline-warning edit-comment-btn" data-comment-id="@reply.Id">Edit</button>
                                                <form asp-controller="Comment" asp-action="Delete" method="post" class="d-inline">
                                                    <input type="hidden" name="id" value="@reply.Id" />
                                                    <button type="submit" class="btn btn-sm btn-outline-danger" onclick="return confirm('Are you sure you want to delete this reply?')">Delete</button>
                                                </form>
                                            }
                                        </div>
                                    </div>
                                }
                            }

                            <!-- Reply form (hidden by default) -->
                            <div class="reply-form mt-3 d-none" id="reply-form-@comment.Id">
                                <form asp-controller="Comment" asp-action="Create" method="post">
                                    <input type="hidden" name="blogPostId" value="@Model.Id" />
                                    <input type="hidden" name="parentCommentId" value="@comment.Id" />
                                    <div class="form-group">
                                        <textarea name="content" class="form-control" rows="2" placeholder="Write a reply..." required></textarea>
                                    </div>
                                    <button type="submit" class="btn btn-sm btn-primary mt-2">Post Reply</button>
                                </form>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <p>No comments yet. Be the first to comment!</p>
                }
            </div>

            <a asp-action="Index" class="btn btn-secondary mt-3">Back to List</a>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/js/comments.js" asp-append-version="true"></script>
}

@section Styles {
    <link rel="stylesheet" href="~/css/blog-details.css" asp-append-version="true" />
}